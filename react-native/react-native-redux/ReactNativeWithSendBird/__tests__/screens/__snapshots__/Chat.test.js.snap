// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`screen/Chat renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#f1f2f6",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 10,
        "transform": Array [
          Object {
            "scaleY": -1,
          },
        ],
      }
    }
  >
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      extraData={
        Object {
          "channel": null,
          "isLoading": false,
          "previousMessageListQuery": null,
          "textMessage": "",
        }
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "marginBottom": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            Object {
              "marginLeft": 10,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#494e57",
                "fontSize": 20,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "margin": 0,
                  "padding": 0,
                },
              ],
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Object {
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          onChangeText={[Function]}
          placeholder="Your message"
          rejectResponderTermination={true}
          selectionColor="#212529"
          style={
            Object {
              "color": "#212529",
              "minHeight": 36,
              "width": 674,
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            Object {
              "marginLeft": 0,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#494e57",
                "fontSize": 20,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "margin": 0,
                  "padding": 0,
                },
              ],
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;
