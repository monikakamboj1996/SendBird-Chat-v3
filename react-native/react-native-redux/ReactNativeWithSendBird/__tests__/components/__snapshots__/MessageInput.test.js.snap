// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component/MessageInput renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flexDirection": "row",
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        false,
        false,
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "justifyContent": "center",
        },
        Object {
          "marginLeft": 10,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#494e57",
            "fontSize": 20,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "margin": 0,
              "padding": 0,
            },
          ],
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "paddingLeft": 8,
        "paddingRight": 8,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Your message"
      rejectResponderTermination={true}
      selectionColor="#212529"
      style={
        Object {
          "color": "#212529",
          "minHeight": 36,
          "width": 674,
        }
      }
      underlineColorAndroid="transparent"
      value="test_message"
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        false,
        false,
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "justifyContent": "center",
        },
        Object {
          "marginLeft": 0,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#7d62d9",
            "fontSize": 20,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "margin": 0,
              "padding": 0,
            },
          ],
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`component/MessageInput renders correctly on empty text string 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flexDirection": "row",
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        false,
        false,
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "justifyContent": "center",
        },
        Object {
          "marginLeft": 10,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#494e57",
            "fontSize": 20,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "margin": 0,
              "padding": 0,
            },
          ],
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "paddingLeft": 8,
        "paddingRight": 8,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Your message"
      rejectResponderTermination={true}
      selectionColor="#212529"
      style={
        Object {
          "color": "#212529",
          "minHeight": 36,
          "width": 674,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        false,
        false,
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "justifyContent": "center",
        },
        Object {
          "marginLeft": 0,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#494e57",
            "fontSize": 20,
          },
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "margin": 0,
              "padding": 0,
            },
          ],
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;
